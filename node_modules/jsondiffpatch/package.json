{
  "name": "jsondiffpatch",
  "version": "0.0.5",
  "author": {
    "name": "Benjamin Eidelman",
    "email": "beneidel@gmail.com"
  },
  "description": "Diff & Patch for JSON object graphs",
  "contributors": [
    {
      "name": "Benjamin Eidelman",
      "email": "beneidel@gmail.com"
    }
  ],
  "bin": {},
  "scripts": {
    "test": "qunit -c ./src/jsondiffpatch.js -d jsondiffpatch:./src/jsondiffpatch -t ./test/test.js",
    "minify": "uglifyjs ./src/jsondiffpatch.js > ./jsondiffpatch.min.js"
  },
  "main": "./src/jsondiffpatch",
  "repository": {
    "type": "git",
    "url": "git://github.com/benjamine/JsonDiffPatch.git"
  },
  "keywords": [
    "json",
    "diff",
    "patch"
  ],
  "devDependencies": {
    "qunit": "0.5.x",
    "uglify-js": "1.3.x"
  },
  "bundleDependencies": [],
  "license": "MIT",
  "engine": {
    "node": ">=0.4"
  },
  "dependencies": {
    "cli-color": ">=0.1.7"
  },
  "optionalDependencies": {
    "cli-color": ">=0.1.7"
  },
  "engines": {
    "node": "*"
  },
  "homepage": "https://github.com/benjamine/JsonDiffPatch",
  "readme": "JsonDiffPatch\n=========\n\n*Diff & Patch for JavaScript objects and arrays (ie. any JSON serializable structure)*\n\nJsonDiffPatch is a small library that allows to diff object graphs, create a patch (in pure JSON), and apply it to update an original version.\n\nNow available on npm:\n```\nnpm install jsondiffpatch\n```\n-----\n**[DEMO](http://benjamine.github.com/JsonDiffPatch/demo/index.htm)**\n-----\n-----\n\n- Could be used for logging, audit, remote (client-server) synchronization of changes, etc.\n- Minified version is < 6KB\n- Works in browsers and server (Node.j or any CommonJS env), open [test page](http://benjamine.github.com/JsonDiffPatch/test/qunit.htm) to check other browsers.\n- Automatically detect environment support and load as CommonJS module (eg: node.js), anonymous AMD module (eg: using RequireJS on the browser, no globals), or as browser global.\n- For long text diffs uses [google-diff_match_patch](http://code.google.com/p/google-diff-match-patch/) library if loaded (other text diff libs can be plugged in)\n- Arrays can be diffed matching items by key, just provide a \"_key\" property (in either original or new array object). In this case item position will be ignored.\n- Reverse a diff and unpatch (ie. revert object to its original state based on diff)\n- Optional lib included for visualizing diffs as html\n\neg:\n\n\t// sample data\n\tvar country = {\n\t\tname: \"Argentina\",\n\t\tcapital: \"Buenos Aires\",\n\t\tindependence: new Date(1816, 6, 9),\n\t\tunasur: true\n\t};\n  \n\t// clone country, using dateReviver for Date objects\n\tvar country2 = JSON.parse(JSON.stringify(country),jsondiffpatch.dateReviver);\n\t \n\t// make some changes\n\tcountry2.name = \"Rep�blica Argentina\";\n\tcountry2.population = \"41324992\";\n\tdelete country2.capital;\n  \n\tvar delta = jsondiffpatch.diff(country,country2);\n\t\n\t/*\n\tdelta = {\n\t\t\"name\":[\"Argentina\",\"Rep�blica Argentina\"], // old value, new value\n\t\t\"population\":[\"41324992\"], // new value\n\t\t\"capital\":[\"Buenos Aires\",0,0] // deleted\n\t}\n\t*/\n  \n\t// patch original \n\tjsondiffpatch.patch(country, delta);\n\n\t// reverse diff\n\tvar reverseDelta = jsondiffpatch.reverse(delta);\n\t// also country2 can be return to original value with: jsondiffpatch.unpatch(country2, delta);\n\n\tvar delta2 = jsondiffpatch.diff(country,country2);\n\t\n\t// delta2 is undefined, no difference\n\nFor more complex cases (nested objects, arrays, long text diffs) check unit tests in /test/test.js\n\nTo use as AMD module (eg: using RequireJS on the browser):\n\n\trequire('jsondiffpatch', function(jsondiffpatch){\n\n\t\t// code using jsondiffpatch\n\n\t});\n\n\t// a module that depends on jsondiffpatch\n\tdefine('mytexteditor.visualcomparer', ['jsondiffpatch'], function(jsondiffpatch){\n\n\t\t// module implementation using jsondiffpatch\n\n\t});\n\n\n\nTargeted platforms\n----------------\n\n* Tested on Chrome, FireFox, IE7+, to check other browsers open [test page](http://benjamine.github.com/JsonDiffPatch/test/qunit.htm) to run unit tests.\n* Node.js\n\n[QUnit](http://docs.jquery.com/Qunit) is used for unit testing. \nJust open the [test page](http://benjamine.github.com/JsonDiffPatch/test/qunit.htm) on your preferred browser. \n\nTo run tests on Node.js on jsondiffpatch root folder:\n\n```\n\tnpm i\n\tnpm test\n```\n\nMinification\n----------------\n\nA minified version is provided as jsondiffpatch.min.js\nTo regenerate that file run (npm i is required as uglifyjs is used):\n\n```\n\tnpm i\n\tnpm run-script minify\n```\n\nIncluding JsonDiffPatch in your application\n---------------\n\nInstall using npm:\n\n```\nnpm install jsondiffpatch\n```\n\nor, Download the latest release from the web site (http://github.com/benjamine/JsonDiffPatch) and copy \n`jsondiffpatch.min.js` to a suitable location. To support text diffs include Google's diff_match_patch.\n\nThen include it in your HTML\nlike so:\n\n    <script type=\"text/javascript\" src=\"/path/to/jsondiffpatch.min.js\"></script>\n    <script type=\"text/javascript\" src=\"/path/to/diff_match_patch_uncompressed.js\"></script>\n\t\nNote: you can use JsonDiffPatch on browserless JavaScript environments too (as [Node.js](http://nodejs.org/), or [Mozilla Rhino](http://www.mozilla.org/rhino/)). \n\nOn Node.js you have to connect your text diff/patch library explicitly. eg:\n\n\tvar jsondiffpatch = require('./jsondiffpatch.js');\n\t\n\t// load google diff_match_patch library for text diff/patch \n\tjsondiffpatch.config.diff_match_patch = require('./diff_match_patch_uncompressed.js');\n\t\n\t// use text diff for strings longer than 5 chars \n\tjsondiffpatch.config.textDiffMinLength = 5;\n\t\n\tvar d = jsondiffpatch.diff({ age: 5, name: 'Arturo' }, {age: 7, name: 'Armando' });\n\t// d = { \n\t//   age: [ 5, 7 ],\n\t//   name: [ '@@ -1,6 +1,7 @@\\n Ar\\n-tur\\n+mand\\n o\\n', 0, 2 ] }\n\t\n\tconsole.log(d.name[0])\n\t// prints: \n\t// @@ -1,6 +1,7 @@\n\t// Ar\n\t// -tur\n\t// +mand\n\t//  o\n\n\nVisual Diff\n----------------\n\nTo visualize diffs you can include JsonDiffPatch.Html script + css on your page:\n\n    <script type=\"text/javascript\" src=\"/path/to/jsondiffpatch.html.js\"></script>\n    <link rel=\"stylesheet\" href=\"../src/jsondiffpatch.html.css\" type=\"text/css\" />\nNow you can use the jsondiffpatch.html.diffToHtml() function to visualize diffs as html:\n\n```\n    var json1 = JSON.parse($('#json1').val());\n    var json2 = JSON.parse($('#json2').val());\n    var d = jsondiffpatch.diff(json1, json2);\n    $('#myvisualdiffcontainer').empty().append(jsondiffpatch.html.diffToHtml(json1, json2, d));\n```\n\nTo see this in action check the [DEMO](http://benjamine.github.com/JsonDiffPatch/demo/index.htm) page.\n\nAlso you can generate diffs with jsondiffpatch on your console:\n\n```\njsondiffpatch .\\test\\testdata.json .\\test\\testdata2.json\n```\n",
  "readmeFilename": "README.md",
  "_id": "jsondiffpatch@0.0.5",
  "dist": {
    "shasum": "2f8cff6448f678264131954dbb94aa5cda93fb00"
  },
  "_from": "jsondiffpatch"
}
